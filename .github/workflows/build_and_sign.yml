name: "Build and sign"
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:


jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      # PNPM
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      - name: Try to remove artifacts folder
        if: ${{ env.ACT }}
        run: rm -rf web-ext-artifacts
        continue-on-error: true

        # Build
      - name: Get last Git SHA
        shell: bash
        run: |
         sha=$(head=($(<.git/HEAD)); cat .git/${head[1]})
         sha_short=$(printf "%.7s\n" "$sha")

         echo "sha=$sha" >> "$GITHUB_ENV"
         echo "sha_short=$sha_short" >> "$GITHUB_ENV"
      - name: Build
        run: pnpm run ext:build:ci --filename "lobs_la_conjugaison-${{ env.sha_short }}.xpi"
      - name: Get artifact name
        shell: bash
        run: |
          target=$(cd web-ext-artifacts/ && ls *.xpi -1 | head -n1)
          artifact=$(echo "$target" | cut -d '.' -f1)

          echo "target=$target" >> $GITHUB_ENV
          echo "artifact=$artifact" >> "$GITHUB_ENV"
        # target is filename with extension
        # artifact is basename without extension

        # Upload artifact
      - name: "Create artifact folder"
        if: ${{ env.ACT }}
        shell: bash
        run: mkdir -p /tmp/artifacts
      - name: "Upload extension"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact }}
          path: |
            web-ext-artifacts/${{ env.target }}
            package.json
            pnpm-lock.yaml
            extension/
          if-no-files-found: error
          retention-days: ${{ ( !env.ACT && 1 ) || 0 }} # 1 must be first not to be falsy
      - name: "Get manifest"
        id: get-manifest
        run: |
          content=`cat extension/manifest.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=manifestJson::$content"
      - run: |
          echo "manifest_version=${{ fromJson(steps.get-manifest.outputs.manifestJson).version }}" >> "$GITHUB_ENV"
    outputs:
      target: ${{ env.target }}
      artifact: ${{ env.artifact }}
      sha: ${{ env.sha }}
      sha_short: ${{ env.sha_short }}
      manifest_version: ${{ env.manifest_version }}
  sign:
    if: ${{ github.event_name == 'workflow_dispatch' }} || startswith(github.event.ref, 'refs/tags/v')
    name: "Sign and release"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: ls -1R
        # Download artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact }}
          path: .
          if-no-files-found: error

      - run: ls -1R
      - run: mkdir -p signed/

      # PNPM
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install
        run: pnpm install web-ext

        # Sign the goddamn source and download signed extension
      - name: "Sign"
        run: >
          pnpm run ext:sign:ci --channel ${{ (github.event_name == 'workflow_dispatch' && 'unlisted') || 'listed' }}
          --api-key ${{ secrets.WEB_EXT_API_KEY }} --api-secret ${{ secrets.WEB_EXT_API_SECRET }}
          --disable-progress-bar --artifacts-dir signed

        #upload the artifact
      - name: "Upload signed extension"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact }}
          path: "signed/*.xpi"
      - name: "Create Release"
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.build.outputs.manifest_version }}
          file: "signed/*.xpi"
          file_glob: true
          overwrite: true
          body: "Free your hay blocks! 32x and 64x resource pack add-on"